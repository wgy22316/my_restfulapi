server.port=8090

#默认启用的配置文件对应的开发环境
spring.profiles.active=dev

#mybatis xml所在路径
mybatis.mapper-locations=classpath:mapper/*.xml
#实体类位置
mybatis.type-aliases-package=com.my.restfulapi.model

logging.level.com.my.restfulapi.mapper=debug
#通用mapper 配置
mapper.mappers=com.my.restfulapi.common.mapper.MyMapper
mapper.not-empty=false
mapper.identity=MYSQL

#pagehelper
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

sharding.jdbc.datasource.names=master,slave0

sharding.jdbc.datasource.master.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.master.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.master.url=jdbc:mysql://127.0.0.1:3306/user_manage?characterEncoding=utf8&useSSL=false
sharding.jdbc.datasource.master.username=root
sharding.jdbc.datasource.master.password=123456
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
sharding.jdbc.datasource.master.initialSize=1
sharding.jdbc.datasource.master.minIdle=3
sharding.jdbc.datasource.master.maxActive=20
# 配置获取连接等待超时的时间
sharding.jdbc.datasource.master.maxWaite=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
sharding.jdbc.datasource.master.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
sharding.jdbc.datasource.master.minEvictableIdleTimeMillis=30000
sharding.jdbc.datasource.master.validationQuery=select 'x'
sharding.jdbc.datasource.master.testWhileIdle=true
sharding.jdbc.datasource.master.testOnBorrow=false
sharding.jdbc.datasource.master.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
sharding.jdbc.datasource.master.poolPreparedStatements=true
sharding.jdbc.datasource.master.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
sharding.jdbc.datasource.master.filters=stat,wall,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
sharding.jdbc.datasource.master.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000


sharding.jdbc.datasource.slave0.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.slave0.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.slave0.url=jdbc:mysql://127.0.0.1:3306/user_manage?characterEncoding=utf8&useSSL=false
sharding.jdbc.datasource.slave0.username=root
sharding.jdbc.datasource.slave0.password=123456
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
sharding.jdbc.datasource.slave0.initialSize=1
sharding.jdbc.datasource.slave0.minIdle=3
sharding.jdbc.datasource.slave0.maxActive=20
# 配置获取连接等待超时的时间
sharding.jdbc.datasource.slave0.maxWaite=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
sharding.jdbc.datasource.slave0.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
sharding.jdbc.datasource.slave0.minEvictableIdleTimeMillis=30000
sharding.jdbc.datasource.slave0.validationQuery=select 'x'
sharding.jdbc.datasource.slave0.testWhileIdle=true
sharding.jdbc.datasource.slave0.testOnBorrow=false
sharding.jdbc.datasource.slave0.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
sharding.jdbc.datasource.slave0.poolPreparedStatements=true
sharding.jdbc.datasource.slave0.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
sharding.jdbc.datasource.slave0.filters=stat,wall,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
sharding.jdbc.datasource.slave0.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

sharding.jdbc.config.masterslave.name=ms
sharding.jdbc.config.masterslave.master-data-source-name=master
sharding.jdbc.config.masterslave.slave-data-source-names=slave0

#显示sql语句
sharding.jdbc.config.masterslave.props.sql.show=true

## REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=0
## Redis服务器地址
spring.redis.host=127.0.0.1
## Redis服务器连接端口
spring.redis.port=6379
## Redis服务器连接密码（默认为空）
spring.redis.password=
## 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-idle=8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=30000
## 连接池中的最大空闲连接
spring.redis.jedis.pool.min-idle=3
## 连接超时时间（毫秒）
spring.redis.timeout=3000

####################
#http 代理设置
http.proxy.enabled=false
http.proxy.host=127.0.0.1
http.proxy.port=8888

#REST超时配置
rest.readTimeOut=6000
rest.connectTimeOut=2000


data-config.filter-config.logConfig.ignoreMethodName=""